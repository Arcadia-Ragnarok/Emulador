#####################################################################
#              ____                     _                           #
#             /    |                   | |_                         #
#            /     |_ __ ____  __ _  __| |_  __ _                   #
#           /  /|  | '__/  __|/ _` |/ _  | |/ _` |                  #
#          /  __   | | |  |__| (_| | (_| | | (_| |                  #
#         /  /  |  |_|  \____|\__,_|\__,_|_|\__,_|                  #
#        /__/   |__|  [ Ragnarok Emulator ]                         #
#                                                                   #
#####################################################################
#                  Idealizado por: Spell Master                     #
#####################################################################


# @configure_input@

@SET_MAKE@

HAVE_MYSQL=@HAVE_MYSQL@
ifeq ($(HAVE_MYSQL),yes)
	ALL_DEPENDS=common_src login_sql char_sql map_sql sysinfo
	SQL_DEPENDS=common_src login_sql char_sql map_sql sysinfo
	COMMON_SQL_DEPENDS=mt19937ar libconfig sysinfo
	LOGIN_SQL_DEPENDS=mt19937ar libconfig common_src sysinfo
	CHAR_SQL_DEPENDS=mt19937ar libconfig common_src sysinfo
	MAP_SQL_DEPENDS=mt19937ar libconfig common_src sysinfo
else
	ALL_DEPENDS=needs_mysql
	SQL_DEPENDS=needs_mysql
	COMMON_SQL_DEPENDS=needs_mysql
	LOGIN_SQL_DEPENDS=needs_mysql
	CHAR_SQL_DEPENDS=needs_mysql
	MAP_SQL_DEPENDS=needs_mysql
endif

MF_TARGETS = Makefile $(addsuffix /Makefile, Build/source/common Build/3rdparty/mt19937ar \
             Build/3rdparty/libconfig Build/source/char Build/source/login Build/source/map)

CC = @CC@
export CC

#####################################################################
.PHONY: arcadia  \
	common_src \
	mt19937ar \
	login_sql \
	char_sql \
	map_sql \
	clean \
	buildclean \
	distclean \
	sysinfo \
	help

all: $(ALL_DEPENDS)

arcadia: $(SQL_DEPENDS)

$(MF_TARGETS): %: %.in config.status
	@echo "	CONFIGURE"
	@if [ -x config.status ]; then \
		echo "Reconfigurando opcoes: $$(./config.status --config)"; \
		./config.status; \
	else \
		echo "Unable to find a previous config.status.  ./configure will be re-run with the default options."; \
		echo "If you want to use custom options, please press CTRL-C and run ./configure yourself"; \
		for i in 1 2 3 4 5 6 7 8 9 10; do \
			printf "\a. "; \
			sleep 1; \
		done; \
		echo ""; \
		./configure; \
	fi;

common_src: $(COMMON_SQL_DEPENDS) Build/source/common/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/source/common sql

mt19937ar: Build/3rdparty/mt19937ar/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/3rdparty/mt19937ar

libconfig: Build/3rdparty/libconfig/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/3rdparty/libconfig

login_sql: $(LOGIN_SQL_DEPENDS) Build/source/login/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/source/login sql

char_sql: $(CHAR_SQL_DEPENDS) Build/source/char/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/source/char

map_sql: $(MAP_SQL_DEPENDS) Build/source/map/Makefile
	@echo "	MAKE	$@"
	@$(MAKE) -C Build/source/map sql

clean buildclean: $(MF_TARGETS)
	@$(MAKE) -C Build/source/common $@
	@$(MAKE) -C Build/3rdparty/mt19937ar $@
	@$(MAKE) -C Build/3rdparty/libconfig $@
	@$(MAKE) -C Build/source/login $@
	@$(MAKE) -C Build/source/char $@
	@$(MAKE) -C Build/source/map $@

distclean: clean
	@-rm -f $(MF_TARGETS) config.status config.log

sysinfo: config.status
	@./sysinfogen.sh Build/source/common/sysinfo_new.inc @CFLAGS@ @CPPFLAGS@
	@if cmp -s Build/source/common/sysinfo.inc Build/source/common/sysinfo_new.inc; then \
		rm Build/source/common/sysinfo_new.inc ; \
	else \
		mv Build/source/common/sysinfo_new.inc Build/source/common/sysinfo.inc ; \
	fi

config.status: configure
	@echo "	RECONFIGURE"
	@./config.status --recheck && ./config.status

help: Makefile
	@echo "============================"
	@echo "   Ajuda"
	@echo "============================"
	@echo "'login_sql'   - compila o 'login serve'"
	@echo "'char_sql'    - compila o 'char serve'"
	@echo "'map_sql'     - compila o map serve"
	@echo "'all'           - Compila todos dados nessessarios"
	@echo "'arcadia'         - Compila o 'char serve', 'login serve' e 'map serve'"
	@echo "'clean'          - Apaga executaveis e objetos"
	@echo "'buildclean'  - Apaga todos objetos gerados pela compilacao, mas nao apaga os executaveis"
	@echo "'distclean'      - Apaga todos dados gerados pelo './configure' e os executaveis complilados"
	@echo "'help'           - Mostra essa mensagem"
	@echo "============================"

#####################################################################

needs_mysql:
	@echo "Script MySQL nao encontrado ou desativado"
	@exit 1
